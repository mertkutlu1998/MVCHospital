@model DatabaseLayer.DoctorAppointTable

@{
    ViewBag.Title = "DoctorAppointment";
}

<h2>DoctorAppointment</h2>
 @ViewBag.Message
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @*@Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.DoctorID)
    @Html.HiddenFor(model => model.IsFeeSubmit)
    @Html.HiddenFor(model => model.IsChecked)
    @Html.HiddenFor(model => model.PatientID)*@
    <div class="form-horizontal">
        <h4>DoctorAppointTable</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @*<div class="form-group"> Doktorların ıdlerını gosteren alan
                @Html.LabelFor(model => model.DoctorID, "DoctorID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("DoctorID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.DoctorID, "", new { @class = "text-danger" })
                </div>
            </div>*@

        @*<div class="form-group">
                @Html.LabelFor(model => model.PatientID, "PatientID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("PatientID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.PatientID, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.DoctorTimeSlotID, "Select Time Slot", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">


                @Html.DropDownList("DoctorTimeSlotID", null, "Time Slot", htmlAttributes: new { @class = "form-control" })
                @*System.InvalidOperationException: 'The ViewData item that has the key 'DoctorTimeSlotID' is of type 'System.Data.Entity.Infrastructure.DbQuery`1[[DatabaseLayer.DoctorTimeSlotTable, DatabaseLayer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]' but must be of type 'IEnumerable<SelectListItem>
                    '.' Hatasını aldıgımızda conttorllere new selected list ekledik*@
                @Html.ValidationMessageFor(model => model.DoctorTimeSlotID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AppointDate, "Appointment Date", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AppointDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AppointDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, "Appointment Reaseon", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.IsFeeSubmit, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.IsFeeSubmit)
                        @Html.ValidationMessageFor(model => model.IsFeeSubmit, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IsChecked, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.IsChecked)
                        @Html.ValidationMessageFor(model => model.IsChecked, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.TransectionID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TransectionID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TransectionID, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.DoctorComment, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DoctorComment, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DoctorComment, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "GetAllDoctors")
</div>
